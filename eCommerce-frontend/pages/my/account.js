import React, {useEffect, useState} from "react";
import {useRouter} from "next/router";
import Loader from "@/components/Loader";
import Head from "next/head";
import {toast} from "react-toastify";
import {useUser} from "@/contexts/UserContext";
import {getSession} from "next-auth/react";
import {serverSideTranslations} from "next-i18next/serverSideTranslations";
import {useTranslation} from "next-i18next";

const Account = (props) => {

    const router = useRouter();
    const {locale} = router

    const {t} = useTranslation("common")

    const [loader, setLoader] = useState(false);

    const {user} = useUser();

    const monthNames = ["January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ];

    console.log(user)
    console.log(props.session)

    useEffect(() => {
        if(Object.keys(user).length === 0 && props.session === undefined){
            setLoader(true)
            router.push("/auth/login", "/auth/login", {locale}).then(() => {
                toast.error("You need to connect in order to view your profile.", {
                    position: "top-center",
                    autoClose: 5000,
                    hideProgressBar: false,
                    closeOnClick: true,
                    pauseOnHover: true,
                    draggable: true,
                    progress: undefined,
                    theme: "dark",
                })
            })
        }
    }, [])

    return (
        <>
            <Head>
                <title>{user.username} - HerboLAB</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <section className="py-12 sm:py-16 w-full">
                    {
                        loader ?
                            <Loader/>
                            :

                            <div className="container mx-auto my-5 p-5">
                                <div className="md:flex no-wrap md:-mx-2 ">
                                     {/*Left Side */}
                                    <div className="w-full md:w-3/12 md:mx-2 h-full">
                                         {/*Profile Card */}
                                        <div className="bg-white dark:bg-dark p-3 border-t-4 border-green-400">
                                            <div className="relative effect group">
                                                <img className="w-14 h-14 p-1 object-cover rounded-full ring-2 ring-gray-300 dark:ring-gray-500"
                                                     src={user.profile ? user.profile : "/placeholders/customer.png"}
                                                     alt=""/>

                                                <button onClick={() => router.push("/profile/edit-pic", "/profile/edit-pic", {locale})} className="hidden group-hover:block effect absolute w-14 rounded-full py-5 bottom-0 inset-x-0 bg-black/60 text-white text-xs text-center leading-4">{t('edit')}</button>
                                            </div>
                                            <h1 className="text-gray-900 dark:text-white font-bold text-xl leading-8 my-1">{user.username}</h1>
                                            <p className="text-sm text-gray-500 dark:text-white hover:text-gray-600 dark:text-grn leading-6">
                                                {user.about ? user.about : "---about-me"}
                                            </p>
                                        </div>
                                         {/*End of profile card */}
                                    </div>
                                     {/*Right Side */}
                                    <div className="w-full md:w-9/12 mx-2 h-full">
                                         {/*About Section */}
                                        <div className="bg-white dark:bg-grn/25 p-3 shadow-sm rounded-sm">
                                            <div className="flex items-center space-x-2 font-semibold text-gray-900 dark:text-white leading-8">
                                                <span className="text-green-500">
                            <svg className="h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                 stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2"
                                      d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                            </svg>
                        </span>
                                                <span className="tracking-wide">{t('about_lbl')}</span>
                                            </div>
                                            <div className="text-gray-700 dark:text-teal-500">
                                                <div className="grid md:grid-cols-2 text-sm">
                                                    <div className="grid grid-cols-2">
                                                        <div className="px-4 py-2 font-semibold">{t('name')}</div>
                                                        <div className="px-4 py-2">{user.username}</div>
                                                    </div>
                                                    <div className="grid grid-cols-2">
                                                        <div className="px-4 py-2 font-semibold">{t('email')}.</div>
                                                        <div className="px-4 py-2">
                                                            <a className="text-blue-800 dark:text-white break-words"
                                                               href={`mailto:${user.email}`}>{user.email}</a>
                                                        </div>
                                                    </div>
                                                    <div className="grid grid-cols-2">
                                                        <div className="px-4 py-2 font-semibold">{t('contact_no')}</div>
                                                        <div className="px-4 py-2">{user.phone ? user.phone : "---"}</div>
                                                    </div>
                                                    <div className="grid grid-cols-2">
                                                        <div className="px-4 py-2 font-semibold">{t('permanent_address')}</div>
                                                        <div className="px-4 py-2 flex-wrap overflow-scroll">
                                                            <div>{user.street ? user.street : "---"}</div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                         {/*End of about section */}
                                        <ul
                                            className="bg-gray-100 dark:bg-grn/25 text-gray-600 dark:text-grn hover:text-gray-700 dark:text-teal-500 hover:shadow py-2 px-3 mt-3 divide-y rounded shadow-sm">
                                            <li className="flex items-center py-3">
                                                <span>{t('status')}</span>
                                                <span className="ml-auto"><span
                                                    className="bg-green-500 py-1 px-2 rounded text-white text-sm">{t('active')}</span></span>
                                            </li>
                                            <li className="flex items-center py-3">
                                                <span>{t('member_since')}</span>
                                                <span className="ml-auto">{user?.signedAt?.date ? `${monthNames[new Date(user?.signedAt?.date).getMonth()]+ "," + new Date(user?.signedAt?.date).getDate() + " " + new Date(user?.signedAt?.date).getFullYear()}` : "---"}</span>
                                            </li>
                                        </ul>
                                        <div className="my-3 w-full h-full flex justify-center lg:justify-end">
                                            {
                                                <button onClick={() => router.push("/profile/complete", "/profile/complete", {locale})} className="effect rounded-lg bg-yellow-300 hover:bg-yellow-400 py-3 px-7 text-base font-medium text-white hover:bg-opacity-90">
                                                    {!user.street || !user.phone || !user.about ? "Complete your account" : "Edit your account"}
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                    }
                </section>
            </main>
        </>
    )
};

export default Account;

export async function getServerSideProps(ctx) {
    const fs = require('fs');
    const session = await getSession(ctx)
    if (!session) {
        return {
            props: {
                ...(await serverSideTranslations(ctx.locale, ["common"]))
            }
        }
    }
    return {
        props: { session, ...(await serverSideTranslations(ctx.locale, ["common"])) },
    }
}